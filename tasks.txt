Tasks

[] Make sure you are running the LTS version of Node.js (as of October 2016 the LTS version was v4.6.0)

[] Create package.json:
    $ npm init

[] Install babel-node:
    $ npm install babel-cli --save

[] Setup babel presets:
    es2015 preset is for syntax transformation.
    react preset is for react and jsx.
    polyfill is to allow es2016+ like Set, Maps, Promises
    $ npm install babel-preset-es2015 --save
    $ npm install babel-preset-react --save
    $ npm install babel-polyfill --save

[] Enable babel presets, create .babelrc file and add presets:
    {
      "presets": ["es2015", "react"]
    }

[] Add /node_modules and /dist to .gitignore


Let's test the babel setup.

[] Create src/test.js with code:
    let list = [1,2,3];

    for (let number of list) {
    	console.log(number);
    }

    console.log(...list);

[] Setup babel in package.json:
    "scripts": {
        "build": "babel src -d dist"
      }

[] Build it:
    $ npm run build

[] Test it:
    $ node dist/test.js
    $ node src/test.js


Simple test server:

[] Create simple test server in src/test-server.js
    const http = require('http');

    const hostname = '127.0.0.1';
    const port = 3000;

    const server = http.createServer((req, res) => {
      res.statusCode = 200;
      res.setHeader('Content-Type', 'text/plain');
      res.end('Hello World\n');
    });

    server.listen(port, hostname, () => {
      console.log(`Server running at http://${hostname}:${port}/`);
    });

[] Test test-server.js by using your browser.


Setup babel-node to avoid having to run build all the time:

[] Add "babel-node" to package.json:
    "scripts": {
        "babel-node": "babel-node --presets=es2015"
    }

[] Test it:
    $ npm run babel-node src/test-server.js


Setup nodemon. It monitors file changes and automatically reloads server
[] Install it locally:
    $ npm install nodemon --save-dev

[] In package.json:
    "scripts": {
        "nodemon": "nodemon --exec babel-node --presets=es2015"
    }

[] Test it:
    $ npm run nodemon src/test-server.js

[] Make a change to test-server.js and see how it restarts, then hit server with your browser.

Setup ESLint, a code quality tool, checks Javascript syntax.
http://eslint.org/docs/rules/

[] Install it and configure it
    $ npm install eslint --save-dev
    $ ./node_modules/.bin/eslint --init

    ? How would you like to configure ESLint? Answer questions about your style
    ? Are you using ECMAScript 6 features? Yes
    ? Are you using ES6 modules? Yes
    ? Where will your code run? Browser, Node
    ? Do you use CommonJS? No
    ? Do you use JSX? Yes
    ? Do you use React Yes
    ? What style of indentation do you use? Tabs
    ? What quotes do you use for strings? Single
    ? What line endings do you use? Unix
    ? Do you require semicolons? Yes
    ? What format do you want your config file to be in? JSON

[] Test it:
    $ ./node_modules/.bin/eslint src/*

[] git commit changes


Deploy to Heroku
https://devcenter.heroku.com/articles/getting-started-with-nodejs#introduction


